version: "3.4"

volumes:
    prometheus_data: {}
    grafana_data: {}
    elasticsearch-data: {}

services:    
    traefik:
        image: traefik:v2.1
        ports:
            # The HTTP port
            - "80:80"
        volumes:
            # So that Traefik can listen to the Docker events
            - /var/run/docker.sock:/var/run/docker.sock:ro

    webapp:
        build:
            context: "."
            dockerfile: "Dockerfile"
            target: production
        image: jlndk/devoops:latest
        environment:
            - "MINITWIT_ENVIRONMENT=docker"
            - "POSTGRES_CONNECTIONSTRING=Host=database;Database=MiniTwit;Username=postgres;Password=test"
        labels:
            # Tell traefik that this container should be exposed to the public
            - "traefik.enable=true"
            # Tell traefik which port our container listens on
            - "traefik.http.services.webapp.loadbalancer.server.port=80"
            # Tell where the service should be available
            - "traefik.http.routers.webapp.rule=Path(`/{path:.*}`)"
            - "traefik.http.routers.webapp.entrypoints=http"
        volumes:
            - ./aspnetkeys:/root/.aspnet/DataProtection-Keys
        depends_on:
            - database
            - prometheus

    database:
        image: postgres:12
        environment:
            - "POSTGRES_PASSWORD=test"
        volumes:
            - ./postgresdata:/var/lib/postgresql/data

    prometheus:
        # image: jlndk/devoops-prometheus
        build:
            context: "prometheus"
            dockerfile: "Dockerfile"
        volumes:
            - prometheus_data:/prometheus

    grafana:
        image: grafana/grafana
        volumes:
            - grafana_data:/var/lib/grafana
            - ./grafana/provisioning:/etc/grafana/provisioning
            - ./grafana/config.ini:/etc/grafana/config.ini
            - ./grafana/dashboards:/var/lib/grafana/dashboards
        depends_on: 
            - prometheus
    
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:6.2.4
        volumes:
            - elasticsearch-data:/usr/share/elasticsearch/data
     
    kibana:
        image: docker.elastic.co/kibana/kibana:6.2.4
        depends_on:
            - elasticsearch
